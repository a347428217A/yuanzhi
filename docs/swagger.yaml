basePath: /
definitions:
  customer.AppointmentResponse:
    properties:
      amount:
        type: integer
      appointment_date:
        type: string
      created_at:
        type: string
      end_time:
        type: string
      id:
        type: integer
      merchant_name:
        type: string
      order_no:
        type: string
      service_name:
        type: string
      staff_name:
        type: string
      start_time:
        type: string
      status:
        type: string
    type: object
  customer.CouponResponse:
    properties:
      coupon_code:
        type: string
      discount:
        type: integer
      discount_type:
        type: string
      id:
        type: integer
      min_amount:
        type: integer
      name:
        type: string
      status:
        type: string
      valid_from:
        type: string
      valid_to:
        type: string
    type: object
  customer.CouponTemplateResponse:
    properties:
      description:
        type: string
      discount:
        type: integer
      discount_type:
        type: string
      id:
        type: integer
      min_amount:
        type: integer
      name:
        type: string
      validity_days:
        type: integer
    type: object
  customer.CreateAppointmentRequest:
    properties:
      coupon_id:
        description: 可选
        type: integer
      date:
        type: string
      merchant_id:
        type: integer
      remark:
        type: string
      service_id:
        type: integer
      staff_id:
        type: integer
      time_slot_id:
        type: integer
    required:
    - date
    - merchant_id
    - service_id
    - staff_id
    - time_slot_id
    type: object
  customer.DetailResponse:
    properties:
      amount:
        type: integer
      appointment_date:
        type: string
      coupon_used:
        properties:
          amount:
            type: integer
          code:
            type: string
          name:
            type: string
        type: object
      created_at:
        type: string
      end_time:
        type: string
      id:
        type: integer
      merchant_address:
        type: string
      merchant_name:
        type: string
      merchant_phone:
        type: string
      order_no:
        type: string
      remark:
        type: string
      service_image:
        type: string
      service_name:
        type: string
      staff_avatar:
        type: string
      staff_name:
        type: string
      start_time:
        type: string
      status:
        type: string
    type: object
  customer.PaymentRequest:
    properties:
      amount:
        description: 支付金额(分)
        minimum: 1
        type: integer
      appointmentId:
        description: 关联预约ID(可选)
        type: integer
      description:
        description: 支付描述
        type: string
    required:
    - amount
    - description
    type: object
  customer.SimulatePaymentNotifyRequest:
    properties:
      outTradeNo:
        type: string
      paymentId:
        type: integer
      status:
        enum:
        - success
        - failed
        type: string
    required:
    - outTradeNo
    - paymentId
    - status
    type: object
  customer.SlotResponse:
    properties:
      end_time:
        type: string
      id:
        type: integer
      start_time:
        type: string
    type: object
  customer.UpdatePhoneRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  customer.WechatLoginRequest:
    properties:
      code:
        description: 微信授权码
        example: 081klykl2NkUx64YqLml2NkUx6klykly
        type: string
    required:
    - code
    type: object
  internal.CreateBannerRequest:
    properties:
      description:
        type: string
      end_time:
        type: string
      image_url:
        type: string
      link_url:
        type: string
      platform:
        description: all, weapp, h5, app
        type: string
      position:
        description: home, category
        type: string
      sort:
        type: integer
      start_time:
        type: string
      status:
        type: integer
      title:
        type: string
    required:
    - image_url
    - platform
    - position
    - title
    type: object
  internal.CreateMerchantAdminRequest:
    properties:
      password:
        type: string
      role:
        enum:
        - admin
        - staff
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
  internal.RegisterMerchantRequest:
    properties:
      address:
        type: string
      business_hour:
        type: string
      description:
        type: string
      logo:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - address
    - name
    - phone
    type: object
  internal.UpdateBannerRequest:
    properties:
      description:
        type: string
      end_time:
        type: string
      image_url:
        type: string
      link_url:
        type: string
      platform:
        type: string
      position:
        type: string
      sort:
        type: integer
      start_time:
        type: string
      status:
        type: integer
      title:
        type: string
    type: object
  merchant.AddServiceCategoryRequest:
    properties:
      name:
        type: string
      sort:
        description: 可选，默认为0
        type: integer
    required:
    - name
    type: object
  merchant.AppointmentStatsResponse:
    properties:
      month:
        description: 本月预约数
        example: 450
        type: integer
      status:
        additionalProperties:
          type: integer
        description: 各状态预约数
        type: object
      today:
        description: 今日预约数
        example: 15
        type: integer
      week:
        description: 本周预约数
        example: 120
        type: integer
    type: object
  merchant.CreateServiceRequest:
    properties:
      category_id:
        type: integer
      cover_image:
        type: string
      description:
        type: string
      duration:
        type: integer
      name:
        type: string
      price:
        type: integer
    required:
    - category_id
    - duration
    - name
    - price
    type: object
  merchant.CreateStaffRequest:
    properties:
      avatar:
        type: string
      description:
        type: string
      name:
        type: string
      position:
        type: string
      specialties:
        type: string
    required:
    - name
    type: object
  merchant.DailyRevenue:
    properties:
      amount:
        description: 当日收入
        example: 1200.5
        type: number
      date:
        description: 日期
        example: "2023-06-15"
        type: string
    type: object
  merchant.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  merchant.RefundRequest:
    properties:
      refundAmount:
        description: 退款金额(分)
        minimum: 1
        type: integer
      refundReason:
        description: 退款原因
        type: string
    required:
    - refundAmount
    type: object
  merchant.RevenueStatsResponse:
    properties:
      daily_revenue:
        description: 每日收入数据
        items:
          $ref: '#/definitions/merchant.DailyRevenue'
        type: array
      service_revenue:
        description: 服务收入分布
        items:
          $ref: '#/definitions/merchant.ServiceRevenue'
        type: array
      total_revenue:
        description: 总收入
        example: 15000.5
        type: number
    type: object
  merchant.ServiceRevenue:
    properties:
      amount:
        description: 该服务总收入
        example: 5000
        type: number
      service_id:
        description: 服务ID
        example: 1
        type: integer
      service_name:
        description: 服务名称
        example: 基础护理
        type: string
    type: object
  merchant.TimeSlotRequest:
    properties:
      end_time:
        description: HH:MM
        type: string
      start_time:
        description: HH:MM
        type: string
    required:
    - end_time
    - start_time
    type: object
  merchant.UpdateAppointRequest:
    properties:
      reason:
        type: string
      status:
        enum:
        - confirmed
        - completed
        - canceled
        - rejected
        type: string
    required:
    - status
    type: object
  merchant.UpdateServiceCategoryRequest:
    properties:
      name:
        type: string
      sort:
        description: 使用指针类型区分0值和未传值
        type: integer
    type: object
  merchant.UpdateServiceRequest:
    properties:
      cover_image:
        type: string
      description:
        type: string
      duration:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      price:
        type: number
    type: object
  merchant.UpdateStaffRequest:
    properties:
      avatar:
        type: string
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      position:
        type: string
      specialties:
        type: string
    type: object
  models.Banner:
    properties:
      created_at:
        type: string
      description:
        description: 描述
        type: string
      end_time:
        description: 结束展示时间
        type: string
      id:
        type: integer
      image_url:
        description: 图片URL
        type: string
      link_url:
        description: 跳转链接
        type: string
      platform:
        description: 平台(all, weapp, h5, app)
        type: string
      position:
        description: 展示位置(home-首页, category-分类页)
        type: string
      sort:
        description: 排序(数字越小越靠前)
        type: integer
      start_time:
        description: 开始展示时间
        type: string
      status:
        description: 状态(0-禁用,1-启用)
        type: integer
      title:
        description: 轮播图标题
        type: string
      updated_at:
        type: string
    type: object
  models.CouponTemplate:
    properties:
      createdAt:
        description: IsActive      bool    `gorm:"default:true;not null"`
        type: string
      description:
        type: string
      discountType:
        description: fixed, percent
        type: string
      discountValue:
        type: integer
      id:
        type: integer
      merchantID:
        type: integer
      minAmount:
        type: integer
      name:
        type: string
      totalCount:
        type: integer
      updatedAt:
        type: string
      validityDays:
        type: integer
    type: object
  models.Merchant:
    properties:
      address:
        type: string
      businessHours:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    type: object
  models.MerchantAdmin:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      merchantID:
        type: integer
      password:
        type: string
      role:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  models.Payment:
    properties:
      amount:
        description: 支付金额(分)
        type: integer
      appointmentId:
        description: 关联预约ID
        type: integer
      createdAt:
        type: string
      customerId:
        description: 用户ID
        type: integer
      description:
        description: 支付描述
        type: string
      failReason:
        description: 失败原因
        type: string
      id:
        type: integer
      merchantId:
        description: 商家ID
        type: integer
      outTradeNo:
        description: 商户订单号
        type: string
      paidAt:
        description: 支付时间
        type: string
      status:
        description: 支付状态
        type: string
      transactionId:
        description: 微信交易号
        type: string
      updatedAt:
        type: string
    type: object
  models.Refund:
    properties:
      amount:
        description: 退款金额(分)
        type: integer
      appointmentId:
        description: 关联预约ID
        type: integer
      createdAt:
        type: string
      failReason:
        description: 失败原因
        type: string
      id:
        type: integer
      outRefundNo:
        description: 商户退款单号
        type: string
      paymentId:
        description: 支付ID
        type: integer
      reason:
        description: 退款原因
        type: string
      refundId:
        description: 微信退款单号
        type: string
      refundedAt:
        description: 退款时间
        type: string
      status:
        description: 退款状态
        type: string
      updatedAt:
        type: string
    type: object
  models.Service:
    properties:
      categoryID:
        type: integer
      coverImage:
        type: string
      createdAt:
        type: string
      description:
        type: string
      duration:
        description: 分钟
        type: integer
      id:
        type: integer
      isActive:
        type: boolean
      merchantID:
        type: integer
      name:
        type: string
      price:
        type: integer
      sort:
        type: integer
      updatedAt:
        type: string
    type: object
  models.ServiceCategory:
    properties:
      createdAt:
        description: 自动设置创建时间
        type: string
      id:
        type: integer
      merchantID:
        description: 关联商家ID
        type: integer
      name:
        description: 类别名称
        type: string
      sort:
        description: 排序权重
        type: integer
      updatedAt:
        description: 自动设置更新时间
        type: string
    type: object
  models.Staff:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      merchantID:
        type: integer
      name:
        type: string
      position:
        type: string
      specialties:
        type: string
      updatedAt:
        type: string
    type: object
  models.User_coupon:
    properties:
      couponCode:
        type: string
      id:
        type: integer
      status:
        description: unused, used, expired
        type: string
      templateID:
        type: integer
      userID:
        type: integer
      validFrom:
        type: string
      validTo:
        type: string
    type: object
  payment.PrepayResponse:
    properties:
      appId:
        type: string
      nonceStr:
        type: string
      package:
        type: string
      paySign:
        type: string
      signType:
        type: string
      timeStamp:
        type: string
    type: object
  payment.WechatNotifyRequest:
    properties:
      appID:
        type: string
      attach:
        type: string
      bankType:
        type: string
      cashFee:
        type: integer
      cashFeeType:
        type: string
      feeType:
        type: string
      isSubscribe:
        type: string
      mchID:
        type: string
      nonceStr:
        type: string
      openID:
        type: string
      outTradeNo:
        type: string
      resultCode:
        type: string
      returnCode:
        type: string
      returnMsg:
        type: string
      sign:
        type: string
      timeEnd:
        type: string
      totalFee:
        type: integer
      tradeType:
        type: string
      transactionID:
        type: string
    type: object
  payment.WechatNotifyResponse:
    properties:
      returnCode:
        type: string
      returnMsg:
        type: string
    type: object
  utils.PaginatedResponse:
    properties:
      data: {}
      message:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      success:
        type: boolean
      total:
        type: integer
      totalPages:
        type: integer
    type: object
  utils.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
host: user-go-api-171613-8-1367826874.sh.run.tcloudbase.com
info:
  contact: {}
  description: 预约系统API文档
  title: Appointment System API
  version: "1.0"
paths:
  /api/customer/appointments:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的预约记录，支持按状态筛选
      parameters:
      - description: 预约状态筛选
        enum:
        - pending
        - confirmed
        - completed
        - cancelled
        in: query
        name: status
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回预约列表
          schema:
            items:
              $ref: '#/definitions/customer.AppointmentResponse'
            type: array
        "500":
          description: 获取预约列表失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户预约列表
      tags:
      - 预约管理
    post:
      consumes:
      - application/json
      description: 用户创建新的服务预约
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 预约创建请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/customer.CreateAppointmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回预约信息
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 参数错误或日期格式错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建预约失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建预约
      tags:
      - 预约管理
  /api/customer/appointments/{appointmentId}:
    get:
      consumes:
      - application/json
      description: 获取特定预约的详细信息
      parameters:
      - description: 预约ID
        in: path
        name: appointmentId
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回预约详情
          schema:
            $ref: '#/definitions/customer.DetailResponse'
        "400":
          description: 无效的预约ID
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 预约不存在
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取预约详情
      tags:
      - 预约管理
  /api/customer/appointments/{appointmentId}/cancel:
    put:
      consumes:
      - application/json
      description: 用户取消指定的预约
      parameters:
      - description: 预约ID
        in: path
        name: appointmentId
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 预约已取消
          schema:
            type: string
        "400":
          description: 无效的预约ID
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 取消预约失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 取消预约
      tags:
      - 预约管理
  /api/customer/appointments/{appointmentId}/pay:
    post:
      consumes:
      - application/json
      description: 用户为预约创建支付订单
      parameters:
      - description: 预约ID
        in: path
        name: appointmentId
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 支付预订单信息
          schema:
            $ref: '#/definitions/payment.PrepayResponse'
        "400":
          description: 预约信息错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建支付失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 为预约支付
      tags:
      - 客户支付
  /api/customer/banners:
    get:
      consumes:
      - application/json
      description: 用户端：获取有效轮播图
      parameters:
      - description: 展示位置(home,category)
        in: query
        name: position
        required: true
        type: string
      - description: 平台(weapp,h5,app)
        in: query
        name: platform
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Banner'
            type: array
      summary: 获取轮播图
      tags:
      - 轮播图
  /api/customer/coupons:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的优惠券，支持按状态筛选
      parameters:
      - description: 优惠券状态筛选
        enum:
        - unused
        - used
        - expired
        in: query
        name: status
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回优惠券列表
          schema:
            items:
              $ref: '#/definitions/customer.CouponResponse'
            type: array
        "500":
          description: 获取优惠券失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户优惠券列表
      tags:
      - 优惠券管理
  /api/customer/coupons/{couponTemplateId}/claim:
    post:
      consumes:
      - application/json
      description: 用户领取指定的优惠券模板
      parameters:
      - description: 优惠券模板ID
        in: path
        name: couponTemplateId
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回领取的优惠券信息
          schema:
            $ref: '#/definitions/models.User_coupon'
        "400":
          description: 无效的优惠券模板ID
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 领取优惠券失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 领取优惠券
      tags:
      - 优惠券管理
  /api/customer/coupons/available:
    get:
      description: 获取指定商家的可用优惠券列表（客户端）
      parameters:
      - description: 商家ID
        example: 123
        in: query
        name: merchantId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回优惠券列表
          schema:
            items:
              $ref: '#/definitions/customer.CouponTemplateResponse'
            type: array
        "400":
          description: 无效的商家ID
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取优惠券失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取可用优惠券
      tags:
      - 客户-优惠券
  /api/customer/login:
    post:
      consumes:
      - application/json
      description: 使用微信授权码登录或注册用户
      parameters:
      - description: 微信登录请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/customer.WechatLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 微信登录失败
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 用户处理失败或生成token失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 微信登录
      tags:
      - 客户-认证
  /api/customer/merchants:
    get:
      description: 获取系统推荐的商家列表（客户端简单版）
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回商家列表
          schema:
            items:
              $ref: '#/definitions/models.Merchant'
            type: array
        "500":
          description: 获取商家列表失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取推荐商家列表
      tags:
      - 客户-商家
  /api/customer/merchants/{merchantId}:
    get:
      description: 获取指定商家的详细信息（客户端）
      parameters:
      - description: 商家ID
        example: 123
        in: path
        name: merchantId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回商家详情
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的商家ID
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 商家不存在
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取商家详情
      tags:
      - 客户-商家
  /api/customer/merchants/{merchantId}/categories:
    get:
      description: 获取指定商家的服务分类列表（客户端）
      parameters:
      - description: 商家ID
        example: 123
        in: path
        name: merchantId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回分类列表
          schema:
            items:
              $ref: '#/definitions/utils.Response'
            type: array
        "400":
          description: 无效的商家ID
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 商家不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取服务分类失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取商家服务分类
      tags:
      - 客户-商家
  /api/customer/merchants/{merchantId}/services:
    get:
      consumes:
      - application/json
      description: 根据商家ID获取服务列表，支持按分类ID筛选
      parameters:
      - description: 商家ID
        example: 123
        in: path
        name: merchantId
        required: true
        type: integer
      - description: 分类ID
        example: 456
        in: query
        name: categoryId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回服务列表
          schema:
            $ref: '#/definitions/models.Service'
        "400":
          description: 无效的商家ID
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取服务列表失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取商家服务列表
      tags:
      - 商家服务
  /api/customer/payments:
    post:
      consumes:
      - application/json
      description: 用户创建支付订单
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 支付请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/customer.PaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 支付预订单信息
          schema:
            $ref: '#/definitions/payment.PrepayResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建支付失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建支付订单
      tags:
      - 客户支付
  /api/customer/payments/{paymentId}:
    get:
      consumes:
      - application/json
      description: 查询支付订单状态
      parameters:
      - description: 支付订单ID
        in: path
        name: paymentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 支付订单详情
          schema:
            $ref: '#/definitions/models.Payment'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 支付订单不存在
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取支付状态
      tags:
      - 客户支付
  /api/customer/payments/notify:
    post:
      consumes:
      - text/xml
      description: 微信支付结果通知
      parameters:
      - description: 回调数据
        in: body
        name: xml
        required: true
        schema:
          $ref: '#/definitions/payment.WechatNotifyRequest'
      produces:
      - text/xml
      responses:
        "200":
          description: 处理结果
          schema:
            $ref: '#/definitions/payment.WechatNotifyResponse'
      summary: 微信支付回调
      tags:
      - 支付回调
  /api/customer/payments/simulate-notify:
    post:
      consumes:
      - application/json
      description: 用于开发环境的模拟支付回调
      parameters:
      - description: 回调数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/customer.SimulatePaymentNotifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 模拟支付回调
      tags:
      - 支付回调
  /api/customer/phone:
    put:
      consumes:
      - application/json
      description: 用户绑定新的手机号（需要短信验证码）
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 手机号更新请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/customer.UpdatePhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 手机号更新成功
          schema:
            type: string
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 更新手机号失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新用户手机号
      tags:
      - 用户管理
  /api/customer/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的个人信息（包括统计信息）
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回用户信息
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取用户信息失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - 用户管理
  /api/customer/services/{serviceId}/staff:
    get:
      consumes:
      - application/json
      description: 根据服务ID获取可提供该服务的员工列表
      parameters:
      - description: 服务ID
        example: 789
        in: path
        name: serviceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回可用员工列表
          schema:
            items:
              $ref: '#/definitions/models.Staff'
            type: array
        "400":
          description: 无效的服务ID
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取可选员工失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取服务的可用员工
      tags:
      - 服务管理
  /api/customer/timeslots:
    get:
      consumes:
      - application/json
      description: 查询指定商家、技师在指定日期的可预约时间段
      parameters:
      - description: 商家ID
        in: query
        name: merchantId
        required: true
        type: integer
      - description: 技师ID
        in: query
        name: staffId
        required: true
        type: integer
      - description: '日期 (格式: YYYY-MM-DD)'
        example: "2023-06-15"
        in: query
        name: date
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回可预约时间段列表
          schema:
            items:
              $ref: '#/definitions/customer.SlotResponse'
            type: array
        "400":
          description: 参数错误（无效的商家ID、员工ID或日期格式）
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取时间段失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取可预约时间段
      tags:
      - 时间槽管理
  /api/customer/timeslots/dates:
    get:
      consumes:
      - application/json
      description: 查询指定商家、技师和服务的可预约日期范围（默认14天内）
      parameters:
      - description: 商家ID
        in: query
        name: merchantId
        required: true
        type: integer
      - description: 技师ID
        in: query
        name: staffId
        type: integer
      - description: 服务ID
        in: query
        name: serviceId
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回可预约日期列表（YYYY-MM-DD格式）
          schema:
            items:
              type: string
            type: array
        "400":
          description: 无效的商家ID
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取可预约日期失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取可预约日期列表
      tags:
      - 时间槽管理
  /api/internal/banners:
    get:
      consumes:
      - application/json
      description: 内部接口：获取轮播图列表
      parameters:
      - description: 位置筛选
        in: query
        name: position
        type: string
      - description: 平台筛选
        in: query
        name: platform
        type: string
      - description: 状态筛选(0-禁用,1-启用)
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Banner'
            type: array
      summary: 获取轮播图列表
      tags:
      - 轮播图管理
    post:
      consumes:
      - application/json
      description: 内部接口：创建轮播图
      parameters:
      - description: 轮播图信息
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal.CreateBannerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Banner'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 创建轮播图
      tags:
      - 轮播图管理
  /api/internal/banners/{id}:
    delete:
      consumes:
      - application/json
      description: 内部接口：删除轮播图
      parameters:
      - description: 轮播图ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的轮播图ID
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 删除失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 删除轮播图
      tags:
      - 轮播图管理
    put:
      consumes:
      - application/json
      description: 内部接口：更新轮播图
      parameters:
      - description: 轮播图ID
        in: path
        name: id
        required: true
        type: integer
      - description: 轮播图信息
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal.UpdateBannerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Banner'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 轮播图不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 更新失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 更新轮播图
      tags:
      - 轮播图管理
  /api/internal/banners/upload:
    post:
      consumes:
      - multipart/form-data
      description: 内部接口：上传轮播图图片
      parameters:
      - description: 图片文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 文件错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 上传失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 上传轮播图图片
      tags:
      - 轮播图管理
  /api/internal/merchants:
    get:
      consumes:
      - application/json
      description: 内部接口：获取商家列表（支持分页和搜索）
      parameters:
      - description: 商家名称(模糊匹配)
        in: query
        name: name
        type: string
      - description: 联系电话(精确匹配)
        in: query
        name: phone
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回商家列表
          schema:
            allOf:
            - $ref: '#/definitions/utils.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Merchant'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取商家列表
      tags:
      - 内部管理
    post:
      consumes:
      - application/json
      description: 内部接口：注册一个新的商家账户（不对普通用户开放）
      parameters:
      - description: 商家注册信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/internal.RegisterMerchantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 成功返回创建的商家信息
          schema:
            $ref: '#/definitions/models.Merchant'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: 商家名称或电话已存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建商家失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 注册新商家
      tags:
      - 内部管理
  /api/internal/merchants/{merchantId}:
    get:
      consumes:
      - application/json
      description: 内部接口：获取指定商家的详细信息
      parameters:
      - description: 商家ID
        in: path
        name: merchantId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回商家信息
          schema:
            $ref: '#/definitions/models.Merchant'
        "400":
          description: 无效的商家ID
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 商家不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取单个商家
      tags:
      - 内部管理
  /api/internal/merchants/{merchantId}/admins:
    get:
      consumes:
      - application/json
      description: 内部接口：获取指定商家的管理员列表
      parameters:
      - description: 商家ID
        in: path
        name: merchantId
        required: true
        type: integer
      - description: 用户名(模糊匹配)
        in: query
        name: username
        type: string
      - description: 角色过滤
        in: query
        name: role
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回管理员列表
          schema:
            allOf:
            - $ref: '#/definitions/utils.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.MerchantAdmin'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 商家不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取商家管理员列表
      tags:
      - 内部管理
    post:
      consumes:
      - application/json
      description: 内部接口：为指定商家创建管理员账户
      parameters:
      - description: 商家ID
        in: path
        name: merchantId
        required: true
        type: integer
      - description: 管理员信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/internal.CreateMerchantAdminRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 成功返回创建的管理员信息
          schema:
            $ref: '#/definitions/models.MerchantAdmin'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 商家不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: 用户名已被使用
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建管理员失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 创建商家管理员
      tags:
      - 内部管理
  /api/internal/merchants/{merchantId}/admins/{adminId}:
    get:
      consumes:
      - application/json
      description: 内部接口：获取指定商家管理员的详细信息
      parameters:
      - description: 商家ID
        in: path
        name: merchantId
        required: true
        type: integer
      - description: 管理员ID
        in: path
        name: adminId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回管理员信息
          schema:
            $ref: '#/definitions/models.MerchantAdmin'
        "400":
          description: 无效的ID
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 管理员不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取单个管理员
      tags:
      - 内部管理
  /api/merchant/appointments:
    get:
      consumes:
      - application/json
      description: 获取当前商户的预约列表，可按状态和日期筛选
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 预约状态（pending, confirmed, completed, canceled）
        in: query
        name: status
        type: string
      - description: '预约日期（格式: YYYY-MM-DD）'
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 预约列表
          schema:
            items:
              additionalProperties:
                type: string
              type: object
            type: array
        "401":
          description: '未授权" Example({"error": "身份认证失败"})'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: '服务器错误" Example({"error": "获取预约列表失败"})'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取商家预约列表
      tags:
      - 预约管理
  /api/merchant/appointments/{appointmentId}/refund:
    post:
      consumes:
      - application/json
      description: 为已支付的预约发起退款
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 预约ID
        in: path
        name: appointmentId
        required: true
        type: integer
      - description: 退款请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/merchant.RefundRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 退款记录
          schema:
            $ref: '#/definitions/models.Refund'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 退款失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 发起退款
      tags:
      - 商家支付
  /api/merchant/appointments/{appointmentId}/status:
    put:
      consumes:
      - application/json
      description: 商家更新预约的状态（confirmed/completed/canceled/rejected）
      parameters:
      - description: 预约ID
        in: path
        name: appointmentId
        required: true
        type: integer
      - description: 状态更新请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/merchant.UpdateAppointRequest'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 状态更新成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的预约ID | 参数错误 | 无效的状态转换
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 预约不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 更新状态失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新预约状态
      tags:
      - 商家预约管理
  /api/merchant/captcha:
    get:
      description: 获取登录用的图形验证码
      produces:
      - application/json
      responses:
        "200":
          description: 验证码响应
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 生成验证码失败
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 获取图形验证码
      tags:
      - 认证
  /api/merchant/categories:
    get:
      consumes:
      - application/json
      description: 获取当前商家的所有服务类别
      parameters:
      - default: Bearer <token>
        description: BearerToken
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回类别列表
          schema:
            items:
              $ref: '#/definitions/models.ServiceCategory'
            type: array
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取类别失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取服务类别列表
      tags:
      - 服务管理
    post:
      consumes:
      - application/json
      description: 商家管理员添加新的服务类别
      parameters:
      - default: Bearer <token>
        description: BearerToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: 类别信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/merchant.AddServiceCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 成功返回创建的类别
          schema:
            $ref: '#/definitions/models.ServiceCategory'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: 类别名称已存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 添加类别失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加服务类别
      tags:
      - 服务管理
  /api/merchant/categories/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定服务类别
      parameters:
      - default: Bearer <token>
        description: BearerToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: 类别ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            type: string
        "400":
          description: 无效的类别ID
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "403":
          description: 类别下存在服务，无法删除
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 类别不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 删除类别失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除服务类别
      tags:
      - 服务管理
    put:
      consumes:
      - application/json
      description: 更新指定服务类别信息
      parameters:
      - default: Bearer <token>
        description: BearerToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: 类别ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/merchant.UpdateServiceCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回更新的类别
          schema:
            $ref: '#/definitions/models.ServiceCategory'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 类别不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: 类别名称已存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 更新类别失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新服务类别
      tags:
      - 服务管理
  /api/merchant/coupons:
    get:
      description: 获取当前商户的所有优惠券模板（商户端）
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        example: 1
        in: query
        name: page
        type: integer
      - description: 每页数量
        example: 20
        in: query
        name: page_size
        type: integer
      - description: 状态
        enum:
        - active
        - expired
        example: active
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回优惠券模板列表
          schema:
            items:
              $ref: '#/definitions/models.CouponTemplate'
            type: array
        "500":
          description: 获取失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取优惠券模板列表
      tags:
      - 商户-优惠券管理
    post:
      consumes:
      - application/json
      description: 创建新的优惠券模板（商户端）
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 优惠券模板信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CouponTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回创建的优惠券模板
          schema:
            $ref: '#/definitions/models.CouponTemplate'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建优惠券模板
      tags:
      - 商户-优惠券管理
  /api/merchant/coupons/{couponTemplateId}:
    delete:
      consumes:
      - application/json
      description: 删除指定的优惠券模板（商户端）。注意：只能删除未被使用的优惠券模板。
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 优惠券模板ID
        example: 123
        in: path
        name: couponTemplateId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的优惠券ID或优惠券已被使用
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 优惠券不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 删除失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除优惠券模板
      tags:
      - 商户-优惠券管理
    put:
      consumes:
      - application/json
      description: 更新指定的优惠券模板（商户端）
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 优惠券模板ID
        example: 123
        in: path
        name: couponTemplateId
        required: true
        type: integer
      - description: 优惠券模板更新信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CouponTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 优惠券不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 更新失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新优惠券模板
      tags:
      - 商户-优惠券管理
  /api/merchant/login:
    post:
      consumes:
      - application/json
      description: 使用用户名和密码登录，获取JWT令牌
      parameters:
      - description: 登录凭证
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/merchant.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '登录成功" Example({"token": "jwt_token", "admin": {"id":"1", "username":"admin",
            "role":"super_admin", "merchant_id":"123"}})'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: '参数错误" Example({"error": "参数错误"})'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: '用户名或密码错误" Example({"error": "用户名或密码错误"})'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: '生成token失败" Example({"error": "生成token失败"})'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 商户管理员登录
      tags:
      - 认证
  /api/merchant/payments:
    get:
      consumes:
      - application/json
      description: 查询商家的支付记录
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 支付状态
        enum:
        - pending
        - success
        - refunded
        - failed
        in: query
        name: status
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 支付记录列表
          schema:
            allOf:
            - $ref: '#/definitions/utils.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Payment'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取商家支付记录
      tags:
      - 商家支付
  /api/merchant/payments/{paymentId}:
    get:
      consumes:
      - application/json
      description: 查询支付订单详细信息
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 支付订单ID
        in: path
        name: paymentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 支付订单详情
          schema:
            $ref: '#/definitions/models.Payment'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 支付订单不存在
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取支付详情
      tags:
      - 商家支付
  /api/merchant/services:
    get:
      consumes:
      - application/json
      description: 根据分类ID获取服务列表
      parameters:
      - description: 分类ID
        in: query
        name: category_id
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回服务列表
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Service'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取商户服务列表
      tags:
      - 服务管理
    post:
      consumes:
      - application/json
      description: 商家创建新的服务项目（需要商家认证）
      parameters:
      - default: Bearer <token>
        description: BearerToken
        in: header
        name: Authorization
        required: true
        type: string
      - description: 服务信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/merchant.CreateServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Service'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建新的商家服务
      tags:
      - Merchant Services
  /api/merchant/services/{serviceId}:
    delete:
      consumes:
      - application/json
      description: 删除商家服务（软删除或硬删除）
      parameters:
      - description: 服务ID
        example: 123
        in: path
        name: serviceId
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的服务ID
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 服务不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 删除服务失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除服务
      tags:
      - 商家服务管理
    put:
      consumes:
      - application/json
      description: 更新商家服务的详细信息
      parameters:
      - description: 服务ID
        in: path
        name: serviceId
        required: true
        type: integer
      - description: 服务更新请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/merchant.UpdateServiceRequest'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的服务ID | 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 服务不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 更新服务失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新服务信息
      tags:
      - 商家服务管理
  /api/merchant/staff:
    get:
      consumes:
      - application/json
      description: 获取当前商家的所有员工列表
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 员工列表
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Staff'
                  type: array
              type: object
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取员工列表失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取员工列表
      tags:
      - 商家员工管理
    post:
      consumes:
      - application/json
      description: 为当前商家创建新员工
      parameters:
      - description: 员工信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/merchant.CreateStaffRequest'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: 员工创建成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Staff'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建员工失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建员工
      tags:
      - 商家员工管理
  /api/merchant/staff/{staffId}:
    delete:
      consumes:
      - application/json
      description: 删除员工（软删除或硬删除）
      parameters:
      - description: 员工ID
        example: 123
        in: path
        name: staffId
        required: true
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 员工删除成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的员工ID
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 员工不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 删除员工失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除员工
      tags:
      - 商家员工管理
    put:
      consumes:
      - application/json
      description: 更新员工信息
      parameters:
      - description: 员工ID
        example: 123
        in: path
        name: staffId
        required: true
        type: integer
      - description: 员工更新信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/merchant.UpdateStaffRequest'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Staff'
              type: object
        "400":
          description: 无效的员工ID | 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 员工不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 更新员工失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新员工
      tags:
      - 商家员工管理
  /api/merchant/stats/appointments:
    get:
      description: 获取当前商户的预约统计数据，包括今日、本周、本月预约数以及各状态预约数
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: '开始日期 (格式: YYYY-MM-DD)'
        example: '"2023-06-01"'
        in: query
        name: start_date
        type: string
      - description: '结束日期 (格式: YYYY-MM-DD)'
        example: '"2023-06-30"'
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回预约统计数据
          schema:
            $ref: '#/definitions/merchant.AppointmentStatsResponse'
        "500":
          description: 获取数据失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取预约统计数据
      tags:
      - 商户-数据统计
  /api/merchant/stats/revenue:
    get:
      description: 获取当前商户的营收统计数据，包括总收入、每日收入趋势和各服务收入分布
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: '开始日期 (格式: YYYY-MM-DD)'
        example: '"2023-06-01"'
        in: query
        name: start
        required: true
        type: string
      - description: '结束日期 (格式: YYYY-MM-DD)'
        example: '"2023-06-30"'
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回营收统计数据
          schema:
            $ref: '#/definitions/merchant.RevenueStatsResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取数据失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取营收统计数据
      tags:
      - 商户-数据统计
  /api/merchant/timeslots:
    get:
      consumes:
      - application/json
      description: 获取指定员工在特定日期的可用时间段列表（商户端）
      parameters:
      - description: 员工ID
        example: 5
        in: query
        name: staff_id
        required: true
        type: integer
      - description: '日期 (格式: YYYY-MM-DD)'
        example: '"2023-06-15"'
        in: query
        name: date
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回时间段列表
          schema:
            items:
              $ref: '#/definitions/utils.Response'
            type: array
        "400":
          description: 日期格式错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 获取时间段失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - MerchantAuth: []
      summary: 获取可用时间段
      tags:
      - 商户-时间管理
  /api/merchant/timeslots/{staffId}/batch:
    post:
      consumes:
      - application/json
      description: 为指定员工在特定日期批量创建时间段（商户端）
      parameters:
      - description: 员工ID
        example: 5
        in: path
        name: staffId
        required: true
        type: integer
      - description: '日期 (格式: YYYY-MM-DD)'
        example: '"2023-06-15"'
        in: query
        name: date
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 时间段列表
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/merchant.TimeSlotRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 创建失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量创建时间段
      tags:
      - 商户-时间管理
  /api/merchant/timeslots/{timeslotId}:
    delete:
      consumes:
      - application/json
      description: 删除指定的时间段（商户端）
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 时间段ID
        example: 123
        in: path
        name: timeslotId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 无效的时间段ID
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 时间段不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 删除失败
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除时间段
      tags:
      - 商户-时间管理
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
